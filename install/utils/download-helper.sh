#!/usr/bin/env bash

# Fun√ß√£o para download com retry interativo
# Uso: download_with_retry "URL" "descri√ß√£o" "arquivo_destino"
download_with_retry() {
  local url="$1"
  local description="$2"
  local output_file="$3"
  local max_attempts=3
  local attempt=1

  while [ $attempt -le $max_attempts ]; do
    echo "[ezdora][download] Tentativa $attempt/$max_attempts: $description"

    if curl -fsSL --connect-timeout 10 --retry 2 -o "$output_file" "$url" 2>/dev/null; then
      echo "[ezdora][download] ‚úÖ Download conclu√≠do com sucesso"
      return 0
    else
      echo "[ezdora][download] ‚ùå Falha no download (tentativa $attempt/$max_attempts)"

      if [ $attempt -lt $max_attempts ]; then
        echo -n "[ezdora][download] Deseja tentar novamente? (s/n): "
        read -r retry_choice
        if [[ ! "$retry_choice" =~ ^[Ss]$ ]]; then
          echo "[ezdora][download] ‚ö†Ô∏è  Download cancelado pelo usu√°rio"
          return 1
        fi
      else
        echo "[ezdora][download] ‚ö†Ô∏è  Todas as tentativas falharam"
        echo -n "[ezdora][download] Deseja tentar mais uma vez? (s/n): "
        read -r retry_choice
        if [[ "$retry_choice" =~ ^[Ss]$ ]]; then
          max_attempts=$((max_attempts + 1))
        else
          return 1
        fi
      fi
    fi

    attempt=$((attempt + 1))
    [ $attempt -le $max_attempts ] && sleep 2
  done

  return 1
}

# Fun√ß√£o para executar comando com retry interativo
# Uso: command_with_retry "comando" "descri√ß√£o"
command_with_retry() {
  local command="$1"
  local description="$2"
  local max_attempts=3
  local attempt=1

  while [ $attempt -le $max_attempts ]; do
    echo "[ezdora][exec] Tentativa $attempt/$max_attempts: $description"

    if eval "$command"; then
      echo "[ezdora][exec] ‚úÖ Comando executado com sucesso"
      return 0
    else
      echo "[ezdora][exec] ‚ùå Falha na execu√ß√£o (tentativa $attempt/$max_attempts)"

      if [ $attempt -lt $max_attempts ]; then
        echo -n "[ezdora][exec] Deseja tentar novamente? (s/n): "
        read -r retry_choice
        if [[ ! "$retry_choice" =~ ^[Ss]$ ]]; then
          echo "[ezdora][exec] ‚ö†Ô∏è  Execu√ß√£o cancelada pelo usu√°rio"
          return 1
        fi
      else
        echo "[ezdora][exec] ‚ö†Ô∏è  Todas as tentativas falharam"
        echo -n "[ezdora][exec] Deseja tentar mais uma vez? (s/n): "
        read -r retry_choice
        if [[ "$retry_choice" =~ ^[Ss]$ ]]; then
          max_attempts=$((max_attempts + 1))
        else
          return 1
        fi
      fi
    fi

    attempt=$((attempt + 1))
    [ $attempt -le $max_attempts ] && sleep 2
  done

  return 1
}

# Fun√ß√£o para instala√ß√£o opcional com falha n√£o-cr√≠tica
# Uso: optional_install "nome" "comando_instalacao"
optional_install() {
  local app_name="$1"
  local install_command="$2"

  echo "[ezdora][$app_name] Iniciando instala√ß√£o..."

  if eval "$install_command"; then
    echo "[ezdora][$app_name] ‚úÖ Instalado com sucesso!"
    return 0
  else
    echo "[ezdora][$app_name] ‚ö†Ô∏è  Instala√ß√£o falhou (n√£o cr√≠tico)"
    echo -n "[ezdora][$app_name] Deseja tentar instalar manualmente mais tarde? (s/n): "
    read -r manual_choice
    if [[ "$manual_choice" =~ ^[Ss]$ ]]; then
      echo "[ezdora][$app_name] üí° Para instalar manualmente mais tarde, execute:"
      echo "  $install_command"
    fi
    # Retorna 0 para n√£o interromper o fluxo principal
    return 0
  fi
}

# Exporta as fun√ß√µes para uso em outros scripts
export -f download_with_retry
export -f command_with_retry
export -f optional_install